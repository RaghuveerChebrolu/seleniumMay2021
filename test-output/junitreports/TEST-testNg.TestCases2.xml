<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="8" hostname="DESKTOP-A9DN365" name="testNg.TestCases2" tests="10" failures="0" timestamp="01 Jun 2021 17:58:30 GMT" time="11.678" errors="2">
  <testcase name="DataDrivenAutomationDemoSite" time="11.671" classname="testNg.TestCases2">
    <error type="org.openqa.selenium.support.ui.UnexpectedTagNameException" message="Element should have been &quot;select&quot; but was &quot;span&quot;
Build info: version: &#039;3.141.59&#039;, revision: &#039;e82be7d358&#039;, time: &#039;2018-11-14T08:17:03&#039;
System info: host: &#039;DESKTOP-A9DN365&#039;, ip: &#039;192.168.143.30&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_91&#039;
Driver info: driver.version: unknown">
      <![CDATA[org.openqa.selenium.support.ui.UnexpectedTagNameException: Element should have been "select" but was "span"
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-A9DN365', ip: '192.168.143.30', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_91'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.<init>(Select.java:48)
at utility.lib.SelectValueFromDropdown(lib.java:173)
at testNg.TestCases2.DataDrivenAutomationDemoSite(TestCases2.java:430)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- DataDrivenAutomationDemoSite -->
  <testcase name="afterMethod" time="0.007" classname="testNg.TestCases2">
    <error type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at testNg.TestCases2.afterMethod(TestCases2.java:547)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- afterMethod -->
  <testcase name="HandlingAlerts" time="0.000" classname="testNg.TestCases2">
    <skipped/>
  </testcase> <!-- HandlingAlerts -->
  <testcase name="HandlingFrames" time="0.000" classname="testNg.TestCases2">
    <skipped/>
  </testcase> <!-- HandlingFrames -->
  <testcase name="handlingWindows" time="0.000" classname="testNg.TestCases2">
    <skipped/>
  </testcase> <!-- handlingWindows -->
  <testcase name="mouseOperations" time="0.000" classname="testNg.TestCases2">
    <skipped/>
  </testcase> <!-- mouseOperations -->
  <testcase name="FileUpload" time="0.000" classname="testNg.TestCases2">
    <skipped/>
  </testcase> <!-- FileUpload -->
  <testcase name="verifyExternalFrameBackpackOrder" classname="testNg.TestCases2">
    <skipped/>
  </testcase> <!-- verifyExternalFrameBackpackOrder -->
  <testcase name="verifyEnterGMOOnlineLoadedSuccessfully" classname="testNg.TestCases2">
    <skipped/>
  </testcase> <!-- verifyEnterGMOOnlineLoadedSuccessfully -->
  <testcase name="verifyGmoOnlineLoadedSuccusessfully" classname="testNg.TestCases2">
    <skipped/>
  </testcase> <!-- verifyGmoOnlineLoadedSuccusessfully -->
</testsuite> <!-- testNg.TestCases2 -->
