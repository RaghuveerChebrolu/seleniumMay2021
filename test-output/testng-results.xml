<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="1" ignored="0" total="5" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="52570" started-at="2021-05-19T04:18:19Z" finished-at="2021-05-19T04:19:11Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="52570" started-at="2021-05-19T04:18:19Z" finished-at="2021-05-19T04:19:11Z">
      <class name="testNg.TestCases">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testNg.TestCases@5a8e6209]" name="beforeSuite" is-config="true" duration-ms="8723" started-at="2021-05-19T04:18:10Z" finished-at="2021-05-19T04:18:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testNg.TestCases@5a8e6209]" name="beforeTest" is-config="true" duration-ms="1" started-at="2021-05-19T04:18:19Z" finished-at="2021-05-19T04:18:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testNg.TestCases@5a8e6209]" name="beforeClass" is-config="true" duration-ms="1" started-at="2021-05-19T04:18:19Z" finished-at="2021-05-19T04:18:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNg.TestCases@5a8e6209]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-05-19T04:18:19Z" finished-at="2021-05-19T04:18:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="HandlingFrames()[pri:0, instance:testNg.TestCases@5a8e6209]" name="HandlingFrames" duration-ms="22309" started-at="2021-05-19T04:18:19Z" finished-at="2021-05-19T04:18:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HandlingFrames -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNg.TestCases@5a8e6209]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-05-19T04:18:41Z" finished-at="2021-05-19T04:18:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="verifyGmoOnlineLoadedSuccusessfully()[pri:0, instance:testNg.TestCases@5a8e6209]" name="verifyGmoOnlineLoadedSuccusessfully" duration-ms="30094" started-at="2021-05-19T04:18:41Z" finished-at="2021-05-19T04:19:11Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//font[contains(text(),'GMO OnLine')]"}
  (Session info: chrome=90.0.4430.212)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-A9DN365', ip: '192.168.1.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.212, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\raghu\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54345}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: f382e0824e8cdfeef27c7c76a745be72
*** Element info: {Using=xpath, value=//font[contains(text(),'GMO OnLine')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//font[contains(text(),'GMO OnLine')]"}
  (Session info: chrome=90.0.4430.212)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-A9DN365', ip: '192.168.1.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.212, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\raghu\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54345}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: f382e0824e8cdfeef27c7c76a745be72
*** Element info: {Using=xpath, value=//font[contains(text(),'GMO OnLine')]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at testNg.TestCases.verifyGmoOnlineLoadedSuccusessfully(TestCases.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGmoOnlineLoadedSuccusessfully -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNg.TestCases@5a8e6209]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-05-19T04:18:41Z" finished-at="2021-05-19T04:18:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNg.TestCases@5a8e6209]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-05-19T04:19:11Z" finished-at="2021-05-19T04:19:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="verifyEnterGMOOnlineLoadedSuccessfully()[pri:1, instance:testNg.TestCases@5a8e6209]" name="verifyEnterGMOOnlineLoadedSuccessfully" duration-ms="0" started-at="2021-05-19T04:19:11Z" depends-on-methods="testNg.TestCases.verifyGmoOnlineLoadedSuccusessfully" finished-at="2021-05-19T04:19:11Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCases.verifyEnterGMOOnlineLoadedSuccessfully()[pri:1, instance:testNg.TestCases@5a8e6209] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCases.verifyEnterGMOOnlineLoadedSuccessfully()[pri:1, instance:testNg.TestCases@5a8e6209] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnterGMOOnlineLoadedSuccessfully -->
        <test-method status="SKIP" signature="verifyExternalFrameBackpackOrder()[pri:2, instance:testNg.TestCases@5a8e6209]" name="verifyExternalFrameBackpackOrder" duration-ms="0" started-at="2021-05-19T04:19:11Z" depends-on-methods="testNg.TestCases.verifyEnterGMOOnlineLoadedSuccessfully" finished-at="2021-05-19T04:19:11Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCases.verifyExternalFrameBackpackOrder()[pri:2, instance:testNg.TestCases@5a8e6209] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCases.verifyExternalFrameBackpackOrder()[pri:2, instance:testNg.TestCases@5a8e6209] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyExternalFrameBackpackOrder -->
        <test-method status="SKIP" signature="HandlingAlerts()[pri:3, instance:testNg.TestCases@5a8e6209]" name="HandlingAlerts" duration-ms="0" started-at="2021-05-19T04:19:11Z" depends-on-methods="testNg.TestCases.verifyExternalFrameBackpackOrder" finished-at="2021-05-19T04:19:11Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCases.HandlingAlerts()[pri:3, instance:testNg.TestCases@5a8e6209] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCases.HandlingAlerts()[pri:3, instance:testNg.TestCases@5a8e6209] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HandlingAlerts -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testNg.TestCases@5a8e6209]" name="afterClass" is-config="true" duration-ms="1" started-at="2021-05-19T04:19:11Z" finished-at="2021-05-19T04:19:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testNg.TestCases@5a8e6209]" name="afterTest" is-config="true" duration-ms="1" started-at="2021-05-19T04:19:11Z" finished-at="2021-05-19T04:19:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testNg.TestCases@5a8e6209]" name="afterSuite" is-config="true" duration-ms="3" started-at="2021-05-19T04:19:12Z" finished-at="2021-05-19T04:19:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testNg.TestCases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
